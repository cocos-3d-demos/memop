{"version":3,"file":"memop.js","sources":["../lib/quick-sort.js","../lib/fixed-array.js","../lib/pool.js","../lib/frame-pool.js","../lib/recycle-pool.js","../lib/typed-array-pool.js"],"sourcesContent":["'use strict';\n\nfunction _compare(a, b) {\n  return a - b;\n}\n\n/**\n * _swap the places of two elements\n *\n * @private\n * @param {array} array The array which contains the elements\n * @param {number} i The index of the first element\n * @param {number} j The index of the second element\n * @returns {array} array The array with swaped elements\n */\nfunction _swap(array, i, j) {\n  let temp = array[i];\n  array[i] = array[j];\n  array[j] = temp;\n\n  return array;\n}\n\n/**\n * Partitions given subarray using Lomuto's partitioning algorithm.\n *\n * @private\n * @param {array} array Input array\n * @param {number} left The start of the subarray\n * @param {number} right The end of the subarray\n */\nfunction _partition(array, left, right, cmp) {\n  let cmpVal = array[right - 1];\n  let minEnd = left;\n  let maxEnd;\n\n  for (maxEnd = left; maxEnd < right - 1; maxEnd += 1) {\n    if (cmp(array[maxEnd], cmpVal) < 0) {\n      _swap(array, maxEnd, minEnd);\n      minEnd += 1;\n    }\n  }\n  _swap(array, minEnd, right - 1);\n\n  return minEnd;\n}\n\n/**\n * Sorts given array.\n *\n * @private\n * @param {array} array Array which should be sorted\n * @param {number} left The start of the subarray which should be handled\n * @param {number} right The end of the subarray which should be handled\n * @returns {array} array Sorted array\n */\nfunction _quickSort(array, left, right, cmp) {\n  if (left < right) {\n    let p = _partition(array, left, right, cmp);\n    _quickSort(array, left, p, cmp);\n    _quickSort(array, p + 1, right, cmp);\n  }\n\n  return array;\n}\n\n/**\n * Calls the _quickSort function with it's initial values.\n *\n * @public\n * @param {array} array The input array which should be sorted\n * @param {Number} from\n * @param {Number} to\n * @param {Function} cmp\n * @returns {array} array Sorted array\n */\nexport default function (array, from, to, cmp) {\n  if (from === undefined) {\n    from = 0;\n  }\n\n  if (to === undefined) {\n    to = array.length;\n  }\n\n  if (cmp === undefined) {\n    cmp = _compare;\n  }\n\n  return _quickSort(array, from, to, cmp);\n}","import quickSort from './quick-sort';\n\nexport default class FixedArray {\n  constructor(size) {\n    this._count = 0;\n    this._data = new Array(size);\n  }\n\n  _resize(size) {\n    if (size > this._data.length) {\n      for (let i = this._data.length; i < size; ++i) {\n        this._data[i] = undefined;\n      }\n    }\n  }\n\n  get length() {\n    return this._count;\n  }\n\n  get data() {\n    return this._data;\n  }\n\n  reset() {\n    for (let i = 0; i < this._count; ++i) {\n      this._data[i] = undefined;\n    }\n\n    this._count = 0;\n  }\n\n  push(val) {\n    if (this._count >= this._data.length) {\n      this._resize(this._data.length * 2);\n    }\n\n    this._data[this._count] = val;\n    ++this._count;\n  }\n\n  pop() {\n    --this._count;\n\n    if (this._count < 0) {\n      this._count = 0;\n    }\n\n    let ret = this._data[this._count];\n    this._data[this._count] = undefined;\n\n    return ret;\n  }\n\n  fastRemove(idx) {\n    if (idx >= this._count) {\n      return;\n    }\n\n    let last = this._count - 1;\n    this._data[idx] = this._data[last];\n    this._data[last] = undefined;\n    this._count -= 1;\n  }\n\n  indexOf(val) {\n    let idx = this._data.indexOf(val);\n    if (idx >= this._count) {\n      return -1;\n    }\n\n    return idx;\n  }\n\n  sort(cmp) {\n    return quickSort(this._data, 0, this._count, cmp);\n  }\n}","export default class Pool {\n  constructor(fn, size) {\n    this._fn = fn;\n    this._idx = size - 1;\n    this._frees = new Array(size);\n\n    for (let i = 0; i < size; ++i) {\n      this._frees[i] = fn();\n    }\n  }\n\n  _expand(size) {\n    let old = this._frees;\n    this._frees = new Array(size);\n\n    let len = size - old.length;\n    for (let i = 0; i < len; ++i) {\n      this._frees[i] = this._fn();\n    }\n\n    for (let i = len, j = 0; i < size; ++i, ++j) {\n      this._frees[i] = old[j];\n    }\n\n    this._idx += len;\n  }\n\n  alloc() {\n    // create some more space (expand by 20%, minimum 1)\n    if (this._idx < 0) {\n      this._expand(Math.round(this._frees.length * 1.2) + 1);\n    }\n\n    let ret = this._frees[this._idx];\n    this._frees[this._idx] = null;\n    --this._idx;\n\n    return ret;\n  }\n\n  free(obj) {\n    ++this._idx;\n    this._frees[this._idx] = obj;\n  }\n}","export default class FramePool {\n  constructor(fn, size) {\n    this._fn = fn;\n    this._count = 0;\n    this._data = new Array(size);\n\n    for (let i = 0; i < size; ++i) {\n      this._data[i] = fn();\n    }\n  }\n\n  _resize(size) {\n    if (size > this._data.length) {\n      for (let i = this._data.length; i < size; ++i) {\n        this._data[i] = this._fn();\n      }\n    }\n  }\n\n  alloc() {\n    if (this._count >= this._data.length) {\n      this._resize(this._data.length * 2);\n    }\n    return this._data[this._count++];\n  }\n\n  reset() {\n    this._count = 0;\n  }\n\n  get length() {\n    return this._count;\n  }\n\n  get data() {\n    return this._data;\n  }\n}","import quickSort from './quick-sort';\n\nexport default class RecyclePool {\n  constructor(fn, size) {\n    this._fn = fn;\n    this._count = 0;\n    this._data = new Array(size);\n\n    for (let i = 0; i < size; ++i) {\n      this._data[i] = fn();\n    }\n  }\n\n  get length() {\n    return this._count;\n  }\n\n  get data() {\n    return this._data;\n  }\n\n  reset() {\n    this._count = 0;\n  }\n\n  resize(size) {\n    if (size > this._data.length) {\n      for (let i = this._data.length; i < size; ++i) {\n        this._data[i] = this._fn();\n      }\n    }\n  }\n\n  add() {\n    if (this._count >= this._data.length) {\n      this.resize(this._data.length * 2);\n    }\n\n    let ret = this._data[this._count];\n    ++this._count;\n\n    return ret;\n  }\n\n  remove(idx) {\n    if (idx >= this._count) {\n      return;\n    }\n\n    let last = this._count - 1;\n    let tmp = this._data[idx];\n    this._data[idx] = this._data[last];\n    this._data[last] = tmp;\n    this._count -= 1;\n  }\n\n  sort(cmp) {\n    return quickSort(this._data, 0, this._count, cmp);\n  }\n}","let _bufferPools = Array(8);\nfor (let i = 0; i < 8; ++i) {\n  _bufferPools[i] = [];\n}\n\nfunction _nextPow16(v) {\n  for (let i = 16; i <= (1 << 28); i *= 16) {\n    if (v <= i) {\n      return i;\n    }\n  }\n  return 0;\n}\n\nfunction _log2(v) {\n  let r, shift;\n  r = (v > 0xFFFF) << 4; v >>>= r;\n  shift = (v > 0xFF) << 3; v >>>= shift; r |= shift;\n  shift = (v > 0xF) << 2; v >>>= shift; r |= shift;\n  shift = (v > 0x3) << 1; v >>>= shift; r |= shift;\n  return r | (v >> 1);\n}\n\nfunction _alloc(n) {\n  let sz = _nextPow16(n);\n  let bin = _bufferPools[_log2(sz) >> 2];\n  if (bin.length > 0) {\n    return bin.pop();\n  }\n  return new ArrayBuffer(sz);\n}\n\nfunction _free(buf) {\n  _bufferPools[_log2(buf.byteLength) >> 2].push(buf);\n}\n\nexport default {\n  alloc_int8(n) {\n    let result = new Int8Array(_alloc(n), 0, n);\n    if (result.length !== n) {\n      return result.subarray(0, n);\n    }\n\n    return result;\n  },\n\n  alloc_uint8(n) {\n    let result = new Uint8Array(_alloc(n), 0, n);\n    if (result.length !== n) {\n      return result.subarray(0, n);\n    }\n\n    return result;\n  },\n\n  alloc_int16(n) {\n    let result = new Int16Array(_alloc(2 * n), 0, n);\n    if (result.length !== n) {\n      return result.subarray(0, n);\n    }\n\n    return result;\n  },\n\n  alloc_uint16(n) {\n    let result = new Uint16Array(_alloc(2 * n), 0, n);\n    if (result.length !== n) {\n      return result.subarray(0, n);\n    }\n\n    return result;\n  },\n\n  alloc_int32(n) {\n    let result = new Int32Array(_alloc(4 * n), 0, n);\n    if (result.length !== n) {\n      return result.subarray(0, n);\n    }\n\n    return result;\n  },\n\n  alloc_uint32(n) {\n    let result = new Uint32Array(_alloc(4 * n), 0, n);\n    if (result.length !== n) {\n      return result.subarray(0, n);\n    }\n\n    return result;\n  },\n\n  alloc_float32(n) {\n    let result = new Float32Array(_alloc(4 * n), 0, n);\n    if (result.length !== n) {\n      return result.subarray(0, n);\n    }\n\n    return result;\n  },\n\n  alloc_float64(n) {\n    let result = new Float64Array(_alloc(8 * n), 0, n);\n    if (result.length !== n) {\n      return result.subarray(0, n);\n    }\n\n    return result;\n  },\n\n  alloc_dataview(n) {\n    let result = new DataView(_alloc(n), 0, n);\n    if (result.length !== n) {\n      return result.subarray(0, n);\n    }\n\n    return result;\n  },\n\n  free(array) {\n    _free(array.buffer);\n  },\n\n  reset() {\n    let _bufferPools = Array(8);\n    for (let i = 0; i < 8; ++i) {\n      _bufferPools[i] = [];\n    }\n  },\n};"],"names":["let","this","i","prototypeAccessors"],"mappings":"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"}